{"version":3,"sources":["components/common/spinner.jsx","components/pokemons-list.jsx","components/search.jsx","components/common/like.jsx","services/httpService.js","services/authService.js","services/pokemonsService.js","services/favouriteService.js","components/pokemon-details.jsx","components/filter.jsx","components/pokemons.jsx","components/navbar.jsx","components/common/input.jsx","components/common/form.jsx","services/userService.js","components/auth/registerForm.jsx","components/auth/register-page.jsx","components/not-found-page.jsx","components/auth/loginForm.jsx","components/auth/login-page.jsx","components/auth/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["Spinner","className","role","PokemonsList","pokemons","onItemClick","selectedItem","length","map","pokemon","key","_id","onClick","src","image","alt","name","width","Search","state","type","placeholder","onChange","evt","props","Component","Like","onLike","liked","axios","defaults","baseURL","process","headers","common","getJwt","interceptors","response","use","error","status","console","log","alert","Promise","reject","get","post","put","delete","tokenKey","options","user","a","httpService","email","password","jwt","data","localStorage","setItem","getCurrentUser","getItem","jwtDecode","ex","authenticated","login","logout","removeItem","loginWithJwt","getPokemons","$params","PokemonDetails","id","loaded","handleLike","history","push","pathname","from","locations","item","newpokemon","setState","handleDownload","csv","Parser","parse","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","err","nextProps","this","likes","copyPokemon","includes","height","weight","base_experience","Filter","favourites","for","Pokemons","fillter","handleItemClick","handleSearch","target","value","fetchPokemons","handleFillterFavourites","paramsObject","Object","assign","params","entries","val","join","search","NavBar","to","Input","label","htmlFor","Joi","require","Form","errors","validate","schema","abortEarly","details","path","message","validateProperty","obj","scheme","handleSubmit","e","preventDefault","doSubmit","handleChange","input","currentTarget","erros","errorMessage","disabled","RegisterForm","string","minDomainSegments","auth","window","location","onSubmit","renderInput","renderButton","RegisterPage","NotFoundPage","LoginForm","LoginPage","Logout","App","Fragment","component","exact","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f10a92be.chunk.js","sourcesContent":["import React from 'react';\n\nconst Spinner = () => {\n    return (\n        <div className=\"d-flex justify-content-center mt-5\">\n            <div className=\"spinner-border text-primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Spinner;","import React from 'react';\n\n\nconst PokemonsList = ({ pokemons, onItemClick, selectedItem }) => {\n    return (\n        pokemons.length > 0 ?\n            <ul className=\"list-group mt-3\">\n                {\n                    pokemons.map(pokemon =>\n                        <li key={pokemon._id}\n                            className={selectedItem === pokemon._id ? 'list-group-item active' : 'list-group-item'}\n                            onClick={() => onItemClick(pokemon._id)} >\n                            <div className=\"d-flex align-items-center\">\n                                <img src={pokemon.image} className=\"mr-3 rounded-circle bg-light\" alt={pokemon.name} width=\"40\" />\n                                <div className=\"media-body\">\n                                    <h6 className=\"mt-0 mb-1\">{pokemon.name}</h6>\n                                </div>\n                            </div>\n                        </li>\n                    )\n                }\n            </ul> :\n            <div className=\"text-center my-5\">\n                <h4>Nothing Found</h4>\n            </div>);\n}\n\nexport default PokemonsList;","import React, { Component } from 'react';\n\n\nclass Search extends Component {\n    state = {}\n    render() {\n        return (\n            <input\n                className=\"form-control form-control-lg\"\n                name=\"s\" type=\"text\"\n                placeholder=\"Search ...\"\n                onChange={(evt) => this.props.onChange(evt)}></input>\n        );\n    }\n}\n\nexport default Search;","import React from 'react';\n\nconst Like = (props) => {\n    return (\n        <span className=\"btn btn-link\"\n            onClick={props.onLike}>\n            <span className={props.liked ? 'fa fa-heart' : 'fa fa-heart-o'}></span>\n        </span>);\n}\nexport default Like;","import axios from 'axios';\nimport { getJwt } from './authService';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.defaults.headers.common['x-auth-token'] = getJwt();\n\n\n// Add a response interceptor \naxios.interceptors.response.use(null, error => {\n    const expectedError = error.response &&\n        error.response.status >= 400 &&\n        error.response.status < 500;\n\n    if (!expectedError) {\n        console.log(\"Loggin the error\", error)\n        alert(\"An unexpected error occurred\");\n    }\n\n    return Promise.reject(error);\n});\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete\n}","\nimport jwtDecode from 'jwt-decode';\nimport httpService from './httpService';\n\n\nconst tokenKey = 'token';\n\nconst options = { headers: { 'Content-Type': 'application/json; charset=UTF-8' } };\n\n\nexport async function login(user) {\n    const { data: jwt } = await httpService.post('/auth/', {\n        email: user.email,\n        password: user.password,\n    }, options);\n\n    localStorage.setItem(tokenKey, jwt);\n}\n\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n    }\n    catch (ex) {\n        return null;\n    }\n}\n\nexport function authenticated() {\n    return localStorage.getItem(tokenKey) ? true : false;\n}\n\nexport function getJwt(tokenKey = 'token') {\n    return localStorage.getItem(tokenKey);\n}\n\n\nexport default {\n    login,\n    logout,\n    getCurrentUser,\n    loginWithJwt,\n    authenticated,\n    getJwt\n}","import httpService from './httpService';\n\n\nexport function getPokemons($params = '') {\n    return httpService.get('/pokemons/?' + $params);\n}\n\nexport function getPokemon(id) {\n    return httpService.get('/pokemons/' + id);\n}","import httpService from './httpService';\n\n\nconst options = { headers: { 'Content-Type': 'application/json; charset=UTF-8' } };\n\nexport function addToFavourites(item) {\n    return httpService.post('/favourites', {\n        name: item.name,\n        image: item.image,\n        _id: item._id,\n    }, options);\n}","import React, { Component } from 'react';\nimport Spinner from './common/spinner';\nimport Like from './common/like';\nimport { getCurrentUser, authenticated } from '../services/authService';\nimport { getPokemon } from '../services/pokemonsService';\nimport { addToFavourites } from '../services/favouriteService';\n\nimport { Parser } from 'json2csv';\n\nclass PokemonDetails extends Component {\n    state = {\n        id: '',\n        pokemon: [],\n        loaded: false,\n        liked: false,\n    }\n\n\n\n    async componentWillReceiveProps(nextProps) {\n        if (nextProps.id !== this.state.pokemon._id) {\n            this.setState({\n                loaded: false\n            });\n\n            const { data } = await getPokemon(nextProps.id)\n\n            this.setState({\n                pokemon: data,\n                loaded: true,\n            });\n\n            //like update\n            if (authenticated() && this.state.pokemon.likes && this.state.pokemon.likes.length) {\n                const copyPokemon = this.state.pokemon;\n                copyPokemon.liked = copyPokemon.likes.includes(getCurrentUser()._id);\n                this.setState({\n                    pokemon: copyPokemon,\n                })\n            }\n        }\n    }\n\n\n    //Allow LoggedIn user - Add To Favourites\n    handleLike = async pokemon => {\n        if (!authenticated())\n            this.props.history.push({\n                pathname: '/login',\n                state: { from: this.props.history.locations }\n            })\n        const response = await addToFavourites(pokemon);\n        if (response.status === 200) {\n            const newpokemon = this.state.pokemon;\n            newpokemon.liked = !newpokemon.liked;\n\n            this.setState({\n                pokemon: newpokemon\n            });\n        }\n    }\n\n\n    //Convert json to CSV & Download\n    handleDownload = () => {\n        const fields = ['name', 'weight', 'height'];\n        try {\n            const parser = new Parser(fields);\n            const csv = parser.parse(this.state.pokemon);\n            var element = document.createElement('a');\n            element.setAttribute('href', 'data:text/csv;charset=utf-8,%EF%BB%BF' + encodeURIComponent(csv));\n            element.setAttribute('download', this.state.pokemon.name);\n            element.style.display = 'none';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n\n\n    render() {\n\n        const { id } = this.props;\n        const { loaded, pokemon } = this.state;\n\n        return (\n            id ?\n                loaded ?\n                    <div>\n                        <div className=\"d-flex align-items-center mb-3\">\n                            <img src={pokemon.image} className=\"mr-3 rounded-circle bg-light\" alt={pokemon.name} />\n                            <h1>{pokemon.name}</h1>\n                            <Like liked={pokemon.liked} onLike={() => this.handleLike(pokemon)} />\n                            <button type=\"button\" className=\"btn btn-outline-primary ml-auto\" onClick={this.handleDownload}>Download</button>\n                        </div>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">\n                                Height <span className=\"badge badge-primary float-right\">{pokemon.height}</span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                Wight <span className=\"badge badge-primary float-right\">{pokemon.weight} </span>\n                            </li>\n                            <li className=\"list-group-item\">\n                                Base Experience <span className=\"badge badge-secondary float-right\">{pokemon.base_experience} </span>\n                            </li>\n                        </ul>\n                    </div>\n                    : <Spinner />\n\n                : <div className=\"center\"><small>Please Select a pokemon!</small></div>\n\n        );\n    }\n}\n\nexport default PokemonDetails;","import React from 'react';\n\nconst Filter = ({ favourites, onChange }) => {\n    return (\n        <div className=\"custom-control custom-switch mt-2\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\" onChange={favourites} />\n            <label className=\"custom-control-label\" for=\"customSwitch1\">My Favourites</label>\n        </div>\n    );\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport Spinner from './common/spinner';\nimport PokemonsList from './pokemons-list';\nimport Search from './search';\nimport PokemonDetails from './pokemon-details';\nimport { getPokemons } from '../services/pokemonsService';\nimport { authenticated } from '../services/authService';\nimport Filter from './filter';\n\nclass Pokemons extends Component {\n    state = {\n        pokemons: [],\n        loaded: false,\n        selectedItem: '',\n        fillter: {\n            name: '',\n            favourites: false,\n        },\n\n    }\n\n    async componentDidMount() {\n        await this.fetchPokemons();\n    }\n\n    async fetchPokemons() {\n\n        this.setState({\n            loaded: false\n        });\n\n\n        //clone Filter object\n        var paramsObject = Object.assign({}, this.state.fillter);\n\n        //if favourites false delete from object\n        if (!paramsObject.favourites) delete paramsObject['favourites'];\n\n        //If name is empty delete from object\n        if (paramsObject.name === \"\") delete paramsObject['name'];\n\n        //Conver object to params\n        const params = Object.entries(paramsObject).map(([key, val]) => `${key}=${val}`).join('&');\n\n        const { data } = await getPokemons(params);\n\n        this.setState({\n            pokemons: data,\n            loaded: true\n        })\n    }\n\n    handleItemClick = (id) => {\n        this.setState({\n            selectedItem: id\n        })\n    }\n\n\n    handleSearch = (evt) => {\n        const fillter = this.state.fillter;\n        const state = fillter.name = evt.target.value;\n        this.setState({ state });\n        this.fetchPokemons();\n    }\n\n\n    handleFillterFavourites = () => {\n        const fillter = this.state.fillter;\n        //Toggle Favourites button\n        const state = fillter.favourites = !fillter.favourites;\n        this.setState({ state });\n        this.fetchPokemons();\n    }\n\n    render() {\n        const { pokemons, loaded, selectedItem, fillter } = this.state;\n        return (\n\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-6 p-5 bg-light\">\n\n                    <Search value={fillter.search} onChange={(evt) => this.handleSearch(evt)} />\n\n                    {authenticated() ? <Filter favourites={this.handleFillterFavourites} /> : ''}\n\n                    {loaded ?\n                        <PokemonsList pokemons={pokemons} onItemClick={this.handleItemClick} selectedItem={selectedItem} />\n                        : <Spinner />}\n                </div>\n                <div className=\"col-md-6\">\n                    <div className=\"position-fixed details p-5\">\n                        <PokemonDetails id={selectedItem} history={this.props.history} />\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pokemons;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = ({ user }) => {\n    return (\n\n\n        <div className=\"\n       \n        d-flex flex-column flex-md-row align-items-center p-3 px-md-4 bg-white border-bottom shadow-sm  sticky-top \">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\"><Link to=\"/\">[ - Pokemons - ]</Link></h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n                {(!user) && (\n                    <>\n                        <Link to=\"/login\" className=\"p-2 text-dark\">Login</Link>\n                        <Link to=\"/register\" className=\"p-2 text-dark\">Register</Link>\n                    </>\n                )}\n                {(user) && (\n                    <>\n                        <Link to=\"/login\" className=\"p-2 text-dark\">{user.name}</Link>\n                        <Link to=\"/logout\" className=\"p-2 text-dark\">Logout</Link>\n                    </>\n                )}\n\n\n\n\n\n\n            </nav>\n\n\n\n\n        </div>\n\n    );\n}\nexport default NavBar;","import React from 'react';\n\n\nconst Input = ({ name, label, type, value, onChange, error }) => {\n    return (\n        <div className=\"from-group\">\n            <label htmlFor=\"email\">{label}</label>\n            <input\n                name={name}\n                value={value}\n                onChange={onChange}\n                type={type}\n                className=\"form-control\"\n            />\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    );\n}\n\nexport default Input;","import React, { Component } from 'react';\nimport Input from './input';\nconst Joi = require('@hapi/joi');\n\n\nclass Form extends Component {\n    state = {\n        data: {},\n        errors: {},\n    }\n\n    validate = () => {\n        const options = { abortEarly: false }; //option for joi\n        const { error } = Joi.validate(this.state.data, this.schema, options);\n        if (!error) return null;\n\n        const errors = {};\n        for (let item of error.details) {\n            errors[item.path[0]] = item.message;\n        }\n        return errors;\n    };\n\n    validateProperty = ({ name, value }) => {\n\n        const obj = { [name]: value };\n        const scheme = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj, scheme);\n        console.log(error);\n        return error ? error.details[0].message : null;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({ errors: errors || {} })  //Must return an object and not null\n        if (errors) return;\n\n        this.doSubmit();\n    };\n\n    handleChange = ({ currentTarget: input }) => {\n        //Validation on change\n        const errors = { ...this.state.erros };\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage)\n            errors[input.name] = errorMessage;\n        else\n            delete errors[input.name];\n\n        //assing input values to state\n        const data = { ...this.state.data };\n        data[input.name] = input.value;\n\n        this.setState({ data, errors })\n\n    };\n\n    renderButton(label = 'Submit') {\n        return (\n            <button className=\"btn btn-primary mt-4\" disabled={this.validate()}>{label}</button>\n        )\n    }\n\n    renderInput(label, name, type = 'text') {\n        const { data, errors } = this.state;\n        return (\n            <Input\n                label={label}\n                name={name}\n                type={type}\n                value={data[name]}\n                onChange={this.handleChange}\n                error={errors[name]} />\n        )\n    }\n\n}\n\nexport default Form;","import httpService from './httpService';\n\nconst options = { headers: { 'Content-Type': 'application/json; charset=UTF-8' } };\nexport function register(user) {\n    return httpService.post('/users', {\n        name: user.name,\n        email: user.email,\n        password: user.password,\n    }, options);\n}\n\n\nexport function login(user) {\n    return httpService.post('/auth', {\n        email: user.email,\n        password: user.password,\n    }, options);\n}","import React from 'react';\nimport Joi from '@hapi/joi';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../common/form';\nimport { register } from '../../services/userService';\nimport auth from '../../services/authService';\n\n\nclass RegisterForm extends Form {\n    state = {\n        data: { name: '', email: '', password: '' },\n        errors: {}\n    }\n\n    schema = {\n        name: Joi.string().label('Name'),\n        email: Joi.string().email({ minDomainSegments: 2 }).label('Email'),\n        password: Joi.string().label('Password')\n    }\n\n    doSubmit = async () => {\n        try {\n            const response = await register(this.state.data);\n            auth.loginWithJwt('token', response.headers['x-auth-token']);\n            window.location = '/';\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = { ...this.state.errors };\n                errors.email = ex.response.data;\n                this.setState({ errors })\n            }\n\n        }\n\n    }\n\n    render() {\n        if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n        return (\n\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('Name', 'name', 'name')}\n                {this.renderInput('Email', 'email', 'email')}\n                {this.renderInput('Password', 'password', 'password')}\n                {this.renderButton()}\n            </form>\n        );\n    }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport RegisterForm from './registerForm';\n\nclass RegisterPage extends Component {\n\n    render() {\n        return (\n            <main className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-3\">\n                        <div className=\"card mt-5 bg-light\">\n                            <div className=\"card-body\">\n\n                                <h1>Register Now</h1>\n                                <RegisterForm history={this.props.history} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default RegisterPage;","\nconst NotFoundPage = () => {\n    return ('Nothign found');\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Joi from '@hapi/joi';\nimport Form from '../common/form';\nimport auth from '../../services/authService';\n\nclass LoginForm extends Form {\n    state = {\n        data: { email: '', password: '' },\n        errors: {}\n    }\n\n    schema = {\n        email: Joi.string().email({ minDomainSegments: 2 }).label('Email'),\n        password: Joi.string().label('Password')\n    }\n    doSubmit = async () => {\n\n        try {\n            await auth.login(this.state.data);\n            window.location = '/';\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = { ...this.state.errors };\n                errors.email = ex.response.data;\n                this.setState({ errors });\n            }\n        }\n    }\n\n    render() {\n        if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('Email', 'email', 'email')}\n                {this.renderInput('Password', 'password', 'password')}\n                {this.renderButton('Login')}\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport LoginForm from './loginForm';\n\nclass LoginPage extends Component {\n    render() {\n        console.log(this.props.history);\n        return (\n            <main className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-3\">\n                        <div className=\"card mt-5 bg-light\">\n                            <div className=\"card-body\">\n\n                                <h1>Login Now</h1>\n                                <LoginForm history={this.props.history} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default LoginPage;","import { Component } from 'react';\nimport auth from '../../services/authService';\n\n\nclass Logout extends Component {\n\n    componentDidMount() {\n        auth.logout();\n        window.location = '/';\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default Logout;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Pokemons from './components/pokemons';\nimport NavBar from './components/navbar';\nimport RegisterPage from './components/auth/register-page';\nimport NotFoundPage from './components/not-found-page';\nimport LoginPage from './components/auth/login-page';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css'\nimport './App.css';\nimport Logout from './components/auth/logout';\nimport auth from './services/authService';\n\n\nconsole.log(process.env);\n\nclass App extends Component {\n\n  state = {\n    user: '',\n  }\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n\n\n    return (\n      <React.Fragment>\n        <NavBar user={this.state.user} />\n        <Switch>\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/register\" component={RegisterPage} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/not-found\" component={NotFoundPage} />\n          <Route path=\"/\" exact component={Pokemons} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment >\n    )\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}